

export function make_icosahedron(a, b, c, id_mesh) {

    let icosahedron =  { vertices : new Float32Array(get_vertices()),
                    normals: new Float32Array(get_normals()),
                    elements: new Uint16Array(get_elements()),
                    n_vertices : 12,
                    n_elements: 20};

    return icosahedron;
}



function get_vertices() {
    return [         0,   -0.5257,    0.8507,
                0.8507,         0,    0.5257,
                0.8507,         0,   -0.5257,
               -0.8507,         0,   -0.5257,
               -0.8507,         0,    0.5257,
               -0.5257,    0.8507,         0,
                0.5257,    0.8507,         0,
                0.5257,   -0.8507,         0,
               -0.5257,   -0.8507,         0,
                     0,   -0.5257,   -0.8507,
                     0,    0.5257,   -0.8507,
                     0,    0.5257,    0.8507];
}

function get_normals() {
    return [         0,   -2.1875,    3.5394,
                3.5394,         0,    2.1875,
                3.5394,         0,   -2.1875,
               -3.5394,         0,   -2.1875,
               -3.5394,         0,    2.1875,
               -2.1875,    3.5394,         0,
                2.1875,    3.5394,         0,
                2.1875,   -3.5394,         0,
               -2.1875,   -3.5394,         0,
                     0,   -2.1875,   -3.5394,
                     0,    2.1875,   -3.5394,
                     0,    2.1875,    3.5394];
}

function get_elements() {
    return [     1,     2,     6,
                 1,     7,     2,
                 3,     4,     5,
                 4,     3,     8,
                 6,     5,    11,
                 5,     6,    10,
                 9,    10,     2,
                10,     9,     3,
                 7,     8,     9,
                 8,     7,     0,
                11,     0,     1,
                 0,    11,     4,
                 6,     2,    10,
                 1,     6,    11,
                 3,     5,    10,
                 5,     4,    11,
                 2,     7,     9,
                 7,     1,     0,
                 3,     9,     8,
                 4,     8,     0];
}
